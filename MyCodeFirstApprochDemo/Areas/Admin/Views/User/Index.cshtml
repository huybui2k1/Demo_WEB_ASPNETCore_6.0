@using MyCodeFirstApprochDemo.Areas.Admin.Models;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IEnumerable<DemoApproachLibrary.DataAccess.NguoiDungViewModel>

@{
    ViewData["Title"] = "QL Người Dùng";
    Layout = "~/Areas/admin/Views/Shared/_Layout.cshtml";
}

<header class="panel-heading">
    Quản lý Người Dùng
</header>
<div class="panel-body">

    <p>
        @Html.ActionLink("Tạo mới","Create","User", null, new {@class="btn btn-danger"})
    </p>
    <div class="text-align">
         @if (TempData["Message"] != null)
        {
    <div id="AlertBox" class="alert @TempData["AlertType"]">

        @TempData["Message"]
        </div>
        }
    </div>
    <div class="processing-preview hidden">
    </div>
     <div class="row form-body">
        <div class="form-group mb-4">
        @using (Html.BeginForm("Index", "User", FormMethod.Get))
        {
                <div class="row col-lg-4">
                @Html.TextBox("SearchString", Context.Request.Query["SearchString"],null,new {@class="form-control", @placeholder="Nhập từ khoá cần tìm kiếm"})
            </div>
             <div class="col-lg-4">
        <select id="UserTypeId" name="UserType" class="form-control">
            <option value="">-- Select User Type --</option>
            @{
                if(ViewBag.LoaiNguoiDung!=null){
            @foreach (var userType in ViewBag.LoaiNguoiDung as List<LoaiNguoiDung>)
            {
                                    <option value="@userType.Id" @((Context.Request.Query["UserType"] != "")? (userType.Id == Convert.ToInt32(Context.Request.Query["UserType"]) ? "selected" : ""):""
                                           )>@userType.Name</option>
                                }
            }
            }
        </select>
                 </div>
            <div class="col-lg-2">
                <input type="submit" onclick="return DisplayProgressMessage(this, 'Searching...');"  class="btn btn-danger" value="Tìm kiếm" />
            </div
            <div style="clear: both"></div>
        }
        </div>
<table class="table">
    <thead>
        <tr>
                <th>
                   STT
                </th>
            <th>
               Tên Đăng Nhập
            </th>
            <th>
                Loại Người Dùng
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MaNguoiDung)
            </th>
            <th>
                Giới tính
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
            @{
                int dem = 1;
                int page = Convert.ToInt32(Context.Request.Query["page"]);
                if(page > 1)
                {
                    dem = (page - 1) * 5 + 1;
                }
            }
@foreach (var item in Model) {
        <tr>
                    <td>
                       @dem
                    </td>
            <td>
                @Html.DisplayFor(modelItem => item.TenDangNhap)
            </td>
            <td>
                        @{
                            var loaiNguoiDung = item.LoaiNguoiDung;
                            var mau="";
                            var tenLoai = "";
                            switch (loaiNguoiDung)
                            {
                                case 1: 
                                    mau = "Green";
                                    tenLoai = "Khách hàng";
                                    break;
                                case 2:     
                                    mau = "blue";
                                    tenLoai = "Nhân Viên";
                                    break;
                                 case 3:     
                                    mau = "red";
                                    tenLoai = "Quản trị";
                                    break;
                                    default:
                                    tenLoai = "Chưa xác đinh";
                                    break;
                            }
                        }
                        <font color=@mau>
                            @tenLoai
                        </font>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MaNguoiDung)
            </td>
            <td>
                        @{
                            var gender = item.GioiTinh;
                            var icon = "";
                            if (gender)
                            {
                                icon = "male";
                            }
                            else
                            {
                                icon = "female";
                            }
                        }
                        <i class="fa fa-male"></i>
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
            </td>
        </tr>
}
    </tbody>
</table>
 <div class="form-group">
        @Html.PagedListPager((IPagedList) Model, page => Url.Action("Index", new {page = page,
                SearchString = @Context.Request.Query["SearchString"],sortby = @Context.Request.Query["sortby"]}),
                new X.PagedList.Web.Common.PagedListRenderOptions {
                 LiElementClasses = new string[] {"page-item"},
                 PageClasses = new string[] { "page-link" }
})
    </div>
    </div>
    @section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        DateTime currentDate = DateTime.Now;
    }
    <script src="~/admin/js/controller/usercontroller.js?@currentDate"></script>
    <script type="text/javascript">
        function DisplayProgressMessage(ctl, msg) {
            //if use the submit button, you can use event.preventDefault to prevent the default submit form behavior.
            event.preventDefault();
            // Turn off the "Save" button and change text
            $(ctl).prop("disabled", true).val(msg);
            // Gray out background on page
            $("body").addClass("submit-progress-bg");
            // Wrap in setTimeout so the UI can update the spinners
            $(".processing-preview").removeClass("hidden");
            //submit the form.
            setTimeout(function () {
                $("form").submit();
            }, 5000);
            return true;
        }
    </script>
    }